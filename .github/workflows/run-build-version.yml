name: Build YouTube Version (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to pass to build-version.sh (or "auto")'
        required: true
        default: '20.21.37'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Run build-version.sh
        working-directory: revanced-magisk
        run: |
          set -eux
          chmod +x ./build-version.sh
          ./build-version.sh "${{ github.event.inputs.version }}"

      - id: collect
        name: Collect exactly the 4 desired artifacts (forgiving matching)
        run: |
          set -eux

          VERSION="${{ github.event.inputs.version }}"
          ART="$GITHUB_WORKSPACE/artifacts"
          rm -rf "$ART"
          mkdir -p "$ART"

          # Patterns that are forgiving with or without 'v' and with hyphens/underscores:
          declare -A patterns
          patterns[yt_nonroot]="*youtube*anddea*revanced*arm64*v8a*.apk"
          patterns[yt_root]="*youtube*anddea*revanced*magisk*arm64*v8a*.zip"
          patterns[ytm_nonroot]="*yt*_music*anddea*revanced*arm64*v8a*.apk"
          patterns[ytm_root]="*yt*_music*anddea*revanced*magisk*arm64*v8a*.zip"

          # Exclude artifacts dir to avoid recursion
          EXCLUDE_DIR="$GITHUB_WORKSPACE/artifacts"

          for key in "${!patterns[@]}"; do
            pat="${patterns[$key]}"
            echo "Searching for pattern: $pat"

            # Find the first matching file in workspace (case-insensitive), excluding artifacts dir:
            candidate=$(find "$GITHUB_WORKSPACE" -path "$EXCLUDE_DIR" -prune -o -type f -iname "$pat" -print -quit 2>/dev/null || true)

            if [ -n "$candidate" ]; then
              echo "Found ($key): $candidate"
              base=$(basename "$candidate")
              # Ensure unique filename in artifacts (avoid overwriting)
              if [ -e "$ART/$base" ]; then
                # append key suffix
                cp "$candidate" "$ART/${base%.*}-$key.${base##*.}"
              else
                cp "$candidate" "$ART/"
              fi
            else
              echo "Not found for pattern ($key): $pat"
            fi
          done

          # Show what we collected
          COUNT=$(find "$ART" -type f | wc -l)
          echo "collected_count=$COUNT" >> $GITHUB_OUTPUT
          echo "Artifacts folder size and listing:"
          du -sh "$ART" || true
          ls -lh "$ART" || true

      - name: Upload APKs and ZIPs (only if we collected files)
        if: ${{ steps.collect.outputs.collected_count != '0' }}
        uses: actions/upload-artifact@v4
        with:
          name: youtube-build-artifacts
          path: ${{ github.workspace }}/artifacts

      - name: No artifacts found (helpful message)
        if: ${{ steps.collect.outputs.collected_count == '0' }}
        run: |
          echo "No matching artifacts were found."
          echo "Please paste the output of the 'Run build-version.sh' step and the 'Collect exactly ...' step so I can refine patterns."
