name: Build YouTube Version (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to pass to build-version.sh (or "auto")'
        required: true
        default: '20.21.37'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Run build-version.sh
        working-directory: revanced-magisk
        run: |
          set -eux
          chmod +x ./build-version.sh
          ./build-version.sh "${{ github.event.inputs.version }}"

      - id: collect
        name: Collect the four desired artifacts only
        run: |
          set -eux

          VERSION="${{ github.event.inputs.version }}"
          # If user passed "auto", match any version string
          if [ "$VERSION" = "auto" ]; then
            PV="*"
          else
            PV="$VERSION"
          fi

          ART="$GITHUB_WORKSPACE/artifacts"
          rm -rf "$ART"
          mkdir -p "$ART"

          # Patterns to find (case-insensitive)
          patterns=(
            "youtube-anddea-revanced*${PV}*-arm64-v8a.apk"
            "youtube-anddea-revanced-magisk*${PV}*-arm64-v8a.zip"
            "yt_music-anddea-revanced*${PV}*-arm64-v8a.apk"
            "yt_music-anddea-revanced-magisk*${PV}*-arm64-v8a.zip"
          )

          # Search inside revanced-magisk (prefer build folder if present)
          SEARCH_DIRS=("revanced-magisk/build" "revanced-magisk")

          for pat in "${patterns[@]}"; do
            found=""
            for d in "${SEARCH_DIRS[@]}"; do
              # find first match (case-insensitive)
              candidate=$(find "$d" -type f -iname "$pat" -print -quit 2>/dev/null || true)
              if [ -n "$candidate" ]; then
                found="$candidate"
                break
              fi
            done

            if [ -n "$found" ]; then
              echo "Found: $found"
              # copy without parent dirs, avoid duplicates
              base=$(basename "$found")
              # if file already exists with same name, append suffix to avoid overwrite
              if [ -e "$ART/$base" ]; then
                echo "Warning: $base already exists in artifacts, creating unique name"
                cp "$found" "$ART/${base%.apk}-${RANDOM}.apk" || cp "$found" "$ART/${base%.zip}-${RANDOM}.zip" || true
              else
                cp "$found" "$ART/"
              fi
            else
              echo "Not found for pattern: $pat"
            fi
          done

          # Final reporting
          COUNT=$(find "$ART" -type f | wc -l)
          echo "collected_count=$COUNT" >> $GITHUB_OUTPUT
          echo "Artifacts folder size and listing:"
          du -sh "$ART" || true
          ls -lh "$ART" || true

      - name: Upload APKs and ZIPs (only if we collected files)
        if: ${{ steps.collect.outputs.collected_count != '0' }}
        uses: actions/upload-artifact@v4
        with:
          name: youtube-build-artifacts
          path: ${{ github.workspace }}/artifacts

      - name: No artifacts found (helpful message)
        if: ${{ steps.collect.outputs.collected_count == '0' }}
        run: |
          echo "No matching artifacts were found."
          echo "Check the build log for where files were placed or paste the Locate output here and I'll refine patterns."
