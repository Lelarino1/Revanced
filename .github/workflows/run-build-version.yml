name: Build YouTube Version (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to pass to build-version.sh (or "auto")'
        required: true
        default: '20.21.37'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Run build-version.sh
        working-directory: revanced-magisk
        run: |
          set -eux
          chmod +x ./build-version.sh
          ./build-version.sh "${{ github.event.inputs.version }}"

      - name: Locate outputs (thorough search)
        run: |
          set -eux
          echo "=== Current working dir (for build step) ==="
          echo "PWD: $(pwd)"
          echo "Listing revanced-magisk top-level:"
          ls -la revanced-magisk || true
          echo "Listing revanced-magisk/build (if exists):"
          ls -la revanced-magisk/build || true

          echo
          echo "=== Newest files under revanced-magisk (most recent first) ==="
          # show newest 200 files in revanced-magisk with timestamps
          find revanced-magisk -type f -printf '%T@ %p\n' 2>/dev/null | sort -nr | awk '{printf "%s\n", $0}' | sed -n '1,200p' || true

          echo
          echo "=== Any APK/ZIP under the workspace (size + path) ==="
          find "$GITHUB_WORKSPACE" -type f \( -iname '*.apk' -o -iname '*.zip' \) -printf '%s %p\n' 2>/dev/null | sort -nr | awk '{printf "%.2f MB\t%s\n", $1/1024/1024, $2}' | sed -n '1,200p' || true

          echo
          echo "=== Any APK/ZIP under /home/runner modified in last 60 minutes (size + path) ==="
          # search the runner home (where some tools place outputs)
          find /home/runner -type f \( -iname '*.apk' -o -iname '*.zip' \) -mmin -60 -printf '%s %p\n' 2>/dev/null | sort -nr | awk '{printf "%.2f MB\t%s\n", $1/1024/1024, $2}' | sed -n '1,200p' || true

      - id: collect
        name: Collect APKs and ZIPs into artifacts (safe)
        run: |
          set -eux
          ART="$GITHUB_WORKSPACE/artifacts"
          rm -rf "$ART"
          mkdir -p "$ART"

          # Copy matches under workspace first (preferred)
          echo "Collecting matches under workspace..."
          find "$GITHUB_WORKSPACE" -type f \( -iname '*.apk' -o -iname '*.zip' \) -exec cp {} "$ART"/ \; || true

          # If nothing collected, also try /home/runner (recent files)
          COUNT=$(find "$ART" -type f | wc -l)
          if [ "$COUNT" -eq 0 ]; then
            echo "No artifacts found under workspace; searching /home/runner for recent files..."
            # copy anything modified in last hour (adjust -mmin if needed)
            find /home/runner -type f \( -iname '*.apk' -o -iname '*.zip' \) -mmin -60 -exec cp {} "$ART"/ \; || true
          fi

          # Final count & listing
          COUNT=$(find "$ART" -type f | wc -l)
          echo "collected_count=$COUNT" >> $GITHUB_OUTPUT
          echo "Artifacts folder size and listing:"
          du -sh "$ART" || true
          ls -lh "$ART" || true

      - name: Upload APKs and ZIPs (only if we collected files)
        if: ${{ steps.collect.outputs.collected_count != '0' }}
        uses: actions/upload-artifact@v4
        with:
          name: youtube-build-artifacts
          path: ${{ github.workspace }}/artifacts

      - name: No artifacts found (helpful message)
        if: ${{ steps.collect.outputs.collected_count == '0' }}
        run: |
          echo "No APK or ZIP artifacts were collected."
          echo "Please paste the output of the 'Locate outputs (thorough search)' step here and I'll analyze it."
