name: Upload Release to Telegram

on:
  release:
    types: [published]

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt update && sudo apt install jq -y

      - name: Download release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir assets
          RELEASE_TAG=${{ github.event.release.tag_name }}
          ASSETS_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG")
          echo "$ASSETS_JSON" | jq -r '.assets[] | .browser_download_url' | while read url; do
            wget "$url" -P assets/
          done

      - name: Send release notes to Telegram
        env:
          TG_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT: -1002692922050
        run: |
          BODY=${{ github.event.release.body }}
          # Process the body similar to your existing sed for Telegram Markdown compatibility
          PROCESSED_BODY=$(echo "$BODY" | sed 's/^\* \*\*/↪ \*\*/g; s/^\* `/↪ \*\*/g; s/`/\*/g; s/^\* /\↪/g; s/\*\*/\*/g; s/###//g; s/^- /↪ /g; /^==/d;')
          MSG="*New release published!*

          ${PROCESSED_BODY}"
          # Truncate if too long (Telegram message limit ~4096 chars)
          MSG=${MSG:0:4000}
          curl -X POST "https://api.telegram.org/bot$TG_TOKEN/sendMessage" \
            -d chat_id="$TG_CHAT" \
            -d parse_mode="Markdown" \
            -d disable_web_page_preview="true" \
            -d text="$MSG"

      - name: Upload assets to Telegram
        env:
          TG_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT: -1002692922050
        run: |
          cd assets
          for file in *; do
            if [ -f "$file" ]; then
              curl -F chat_id="$TG_CHAT" \
                -F document=@"$file" \
                "https://api.telegram.org/bot$TG_TOKEN/sendDocument"
            fi
          done
